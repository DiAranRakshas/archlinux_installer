#!/bin/bash

echo "####################"
echo "Install packages"
echo "####################"
echo; echo

echo "####################"
echo "After install Vim pluggins"
echo "for exit Vim do:"
echo "ZZ and ZZ"
echo "####################"
echo; echo

# Select video drivers
echo "####################"
echo "What video drivers install?"
echo "1) xf86-video-intel      -> for Intel"
echo "2) xf86-video-nouveau    -> for nVidea"
echo "other) xf86-video-fbdev  -> other driver"
echo "####################"

read -n1 -p">" drivers; echo
if [[ $drivers == "1" ]]; then
    drivers="xf86-video-intel"
elif [[ $drivers == "2" ]]; then
    drivers="xf86-video-nouveau"
else
    drivers="xf86-video-fbdev"
fi

# Packages
packages="
$drivers linux-headers
dosfstools mtools man-db man-pages reflector xdg-user-dirs bash-completion ntfs-3g gvfs
atool p7zip unrar unzip zip
git htop lm_sensors lesspipe openssh numlockx wget curl cmake ctags neofetch highlight
vim fish tmux ranger
ttf-droid ttf-dejavu ttf-font-awesome ttf-nerd-fonts-symbols
arc-gtk-theme arc-icon-theme xcursor-vanilla-dmz gnome-backgrounds
xorg lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings accountsservice
openbox i3 obconf lxappearance polkit-gnome feh picom
pulseaudio pulseaudio-alsa
network-manager-applet openvpn networkmanager-openvpn
terminator gnome-terminal pcmanfm-gtk3
menumaker zenity dmenu rofi jgmenu plank xfce4-appfinder
gsimplecal gnome-calendar gnome-screenshot gnome-calculator file-roller
viewnior evince vlc firefox remmina freerdp libvncserver transmission-gtk
"

packages_aur="
xkb-switch
arc-dark-osx-openbox-theme-git
mintstick
sublime-text-3
polybar
"

# Install packages from repo
sudo pacman -Sy
sudo pacman -S --needed --noconfirm $packages

# build yay
git clone https://aur.archlinux.org/yay.git
cd yay && makepkg -sirc --noconfirm
cd .. && rm -rf yay

yay -S --noconfirm $packages_aur

###############

username=`whoami`

###############

# Copy configs
cp files/bashrc ~/.bashrc
cp files/vimrc ~/.vimrc
cp files/tmux.conf ~/.tmux.conf
cp files/face ~/.face

cp -r config/ ~/.config

sudo cp files/lightdm-gtk-greeter.conf /etc/lightdm/lightdm-gtk-greeter.conf

###############

# Packages settings

# install Vim-plug
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
# install vim spell RU UTF-8
curl -fLo ~/.vim/spell/ru.utf-8.sug --create-dirs http://ftp.vim.org/vim/runtime/spell/ru.utf-8.sug
curl -fLo ~/.vim/spell/ru.utf-8.spl --create-dirs http://ftp.vim.org/vim/runtime/spell/ru.utf-8.spl
# install vim pluggins
vim -c PlugInstall
# enable vim colorscheme
sed -i 's/desert/PaperColor/' ~/.vimrc

# install oh-my-fish
git clone https://github.com/oh-my-fish/oh-my-fish
oh-my-fish/bin/install --noninteractive --offline
# install theme for fish
fish -c 'omf install agnoster'
# clean oh-my-fish
rm -rf ~/archlinux_installer/oh-my-fish

# ranger icons
git clone https://github.com/cdump/ranger-devicons2 ~/.config/ranger/plugins/devicons2

# create dir for Trash
mkdir -p ~/.local/share/Trash/files

# picom settings
mkdir ~/.config/picom
cp /etc/xdg/picom.conf ~/.config/picom/picom.conf
##### for Virtual Box ### Check for real PC #####
sed -i 's/^# vsync = false/vsync = false/' ~/.config/picom/picom.conf
sed -i 's/^vsync = true/# vsync = true/' ~/.config/picom/picom.conf

# gnome-screenshot settings
gsettings set org.gnome.gnome-screenshot auto-save-directory "file:///home/$username/Загрузки/"

# xrandr to set screen resolution for Virtual Box
while [[ $vbox != "1" ]] && [[ $vbox != "2" ]]; do
    echo; echo
    echo "####################"
    echo "Set screen resolution 1360x768 for Virtual Box:"
    echo "1) yes"
    echo "2) no"
    echo "####################"
    read -n1 -p">" vbox
done
echo; echo

if [[ $vbox == "1" ]]; then
    sed -i 's/# exec --no-startup-id xrandr/exec --no-startup-id xrandr/' ~/.config/i3/config
    sed -i 's/# xrandr/xrandr/' ~/.config/openbox/autostart
fi

# change ethernet interface in polybar config
eth=`ip a | grep "^2:" | awk -F": " '{ print $2 }'`
sed -i "s/enp1s0/$eth/" ~/.config/polybar/openbox.conf
sed -i "s/enp1s0/$eth/" ~/.config/polybar/i3.conf
###############

# Enable services
sudo systemctl enable lightdm

###############

# end update settings

# enable change locale
localectl --no-convert set-x11-keymap us,ru "" "" grp:alt_shift_toggle

# fish is main shell
sudo chsh -s /usr/bin/fish $username
# update fish
fish -c 'fish_update_completions'

# clean yay
yay -Yc --noconfirm

# menumaker for Openbox
# mmaker -f -t GNOME-terminal OpenBox3

# rm installer folder
cd ~
# rm -rf ~/archlinux_installer

###############

echo; echo
echo "####################"
echo "Please do this:"
echo ">reboot"
echo "####################"

